<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-11-16T12:15:07Z" name="Suite" finished-at="2021-11-16T12:15:44Z" duration-ms="37462">
    <groups>
    </groups>
    <test started-at="2021-11-16T12:15:07Z" name="Test1" finished-at="2021-11-16T12:15:28Z" duration-ms="21050">
      <class name="FWBPrac.validateTitle">
        <test-method is-config="true" signature="bm()[pri:0, instance:FWBPrac.validateTitle@2e5c7f0b]" started-at="2021-11-16T12:15:07Z" name="bm" finished-at="2021-11-16T12:15:26Z" duration-ms="18964" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="validateHeader()[pri:0, instance:FWBPrac.validateTitle@2e5c7f0b]" started-at="2021-11-16T12:15:26Z" name="validateHeader" finished-at="2021-11-16T12:15:26Z" duration-ms="278" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [An Academy to learn Everything about Testing] but found [AN ACADEMY TO LEARN EVERYTHING ABOUT TESTING]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [An Academy to learn Everything about Testing] but found [AN ACADEMY TO LEARN EVERYTHING ABOUT TESTING]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at FWBPrac.validateTitle.validateHeader(validateTitle.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHeader -->
        <test-method signature="validationOfTitle()[pri:0, instance:FWBPrac.validateTitle@2e5c7f0b]" started-at="2021-11-16T12:15:28Z" name="validationOfTitle" finished-at="2021-11-16T12:15:28Z" duration-ms="62" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [FEATURED C123OURSES] but found [FEATURED COURSES]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [FEATURED C123OURSES] but found [FEATURED COURSES]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at FWBPrac.validateTitle.validationOfTitle(validateTitle.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationOfTitle -->
      </class> <!-- FWBPrac.validateTitle -->
    </test> <!-- Test1 -->
    <test started-at="2021-11-16T12:15:07Z" name="Test2" finished-at="2021-11-16T12:15:28Z" duration-ms="21362">
      <class name="FWBPrac.validateNavigationBar">
        <test-method signature="validationOfNavigationBar()[pri:0, instance:FWBPrac.validateNavigationBar@780ec4a5]" started-at="2021-11-16T12:15:07Z" name="validationOfNavigationBar" finished-at="2021-11-16T12:15:28Z" duration-ms="21321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationOfNavigationBar -->
      </class> <!-- FWBPrac.validateNavigationBar -->
    </test> <!-- Test2 -->
    <test started-at="2021-11-16T12:15:07Z" name="Test3" finished-at="2021-11-16T12:15:44Z" duration-ms="37456">
      <class name="FWBPrac.HomePage">
        <test-method signature="loginFunctionalitycheck(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:FWBPrac.HomePage@16fb356]" started-at="2021-11-16T12:15:07Z" name="loginFunctionalitycheck" data-provider="getData" finished-at="2021-11-16T12:15:30Z" duration-ms="23316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[a@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[S@2025trp]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[nonRestricted user]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFunctionalitycheck -->
        <test-method signature="loginFunctionalitycheck(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:FWBPrac.HomePage@16fb356]" started-at="2021-11-16T12:15:30Z" name="loginFunctionalitycheck" data-provider="getData" finished-at="2021-11-16T12:15:44Z" duration-ms="14104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[b@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D@2025trp]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Restricted user]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFunctionalitycheck -->
      </class> <!-- FWBPrac.HomePage -->
    </test> <!-- Test3 -->
  </suite> <!-- Suite -->
</testng-results>
